
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ИмяМетаданных = Метаданные.Имя;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)     
	
	Если ВыбранноеЗначение.Вариант  =  "СтатусОтправления" Тогда 
		Объект.СтатусОтправления = ВыбранноеЗначение.ВыбранноеЗначение ;   
	ИначеЕсли ВыбранноеЗначение.Вариант  =  "Маркетплейс" Тогда 
		Объект.Маркетплейс = ВыбранноеЗначение.ВыбранноеЗначение ;		
	ИначеЕсли ВыбранноеЗначение.Вариант  =  "ВидОперацииЗК" Тогда 
		Объект.ВидОперацииЗК = ВыбранноеЗначение.ВыбранноеЗначение ;  	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЕстьОшибки = ПроверкаТиповРеквизитов();  
	Если ЕстьОшибки Тогда
		ПоказатьПредупреждение(,"Устраните ошибки перед продолжением!");
		
		//Отказ = Истина;
	КонецЕсли;	
	УстановитьОформление(); 
	Объект.ДатаДоставки = ТекущаяДата();
	
	Если ЗначениеЗаполнено(Объект.ApiKey) Тогда
		СписокСкладовSelSupНаСервере();
	КонецЕсли;
	
	ВосстановитьТЧНаСервере("Организации");    
	ВосстановитьТЧНаСервере("РасширеннаяНастройкаЗаказов");
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СохранитьТЧНаСервере("Организации"); 
	СохранитьТЧНаСервере("РасширеннаяНастройкаЗаказов"); 
КонецПроцедуры   

&НаСервере
Процедура СохранитьТЧНаСервере(НазваниеТЧ)
	Объект["ТЧ" + НазваниеТЧ] = ЗначениеВСтрокуВнутр(Объект[НазваниеТЧ].Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ВосстановитьТЧНаСервере(НазваниеТЧ)       
	Если ЗначениеЗаполнено(Объект["ТЧ" + НазваниеТЧ]) Тогда
		Объект[НазваниеТЧ].Загрузить(ЗначениеИзСтрокиВнутр(Объект["ТЧ" + НазваниеТЧ])); 	
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы  

&НаКлиенте
Процедура ИзменитьМаркетплейсWILDBERRIES()
	ИзменитьМаркетплейсНаКлиенте("WILDBERRIES");
КонецПроцедуры 	 

&НаКлиенте
Процедура ИзменитьМаркетплейсOZON()
	ИзменитьМаркетплейсНаКлиенте("OZON");
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьМаркетплейсYANDEX_MARKET()
	ИзменитьМаркетплейсНаКлиенте("YANDEX_MARKET");
КонецПроцедуры  

&НаКлиенте
Процедура ИзменитьМаркетплейсSBER_MEGA_MARKET()
	ИзменитьМаркетплейсНаКлиенте("SBER_MEGA_MARKET");
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьМаркетплейсНаКлиенте(Маркетплейс) 
	
    Если Не ЗначениеЗаполнено(Объект.ДатаДоставки) 
		ИЛИ Не ЗначениеЗаполнено(Объект.СтатусОтправления) 
		ИЛИ Не ЗначениеЗаполнено(Объект.Маркетплейс) Тогда
        ПоказатьПредупреждение(,"Заполните обязательные поля на закладке отборы: 'Дата доставки', 'Статус отправления', 'Маркетплейс'!");	
	Иначе	   		                  
		ИзменитьМаркетплейсНаСервере(Маркетплейс);
		СписокОтправленийНаСервере("FBS");		
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура ИзменитьМаркетплейсНаСервере(Маркетплейс)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Маркетплейс = Маркетплейс;
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");    
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьМаркетплейсНовый()
	ИзменитьМаркетплейсНаКлиенте("Новый");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияСобран()
	ИзменитьСтатусОтправленияНаКлиенте("Собран");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияОтменен()
	ИзменитьСтатусОтправленияНаКлиенте("Отменен");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияОтменяется()
	ИзменитьСтатусОтправленияНаКлиенте("Отменяется");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияВыкуплен()
	ИзменитьСтатусОтправленияНаКлиенте("Выкуплен");
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьСтатусОтправленияСпорный()
	ИзменитьСтатусОтправленияНаКлиенте("Спорный");
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьСтатусОтправленияСборка()
	ИзменитьСтатусОтправленияНаКлиенте("Сборка");
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьСтатусОтправленияВПути()
	ИзменитьСтатусОтправленияНаКлиенте("В пути");
КонецПроцедуры 	  

&НаКлиенте
Процедура ИзменитьСтатусОтправленияОтправлен()
	ИзменитьСтатусОтправленияНаКлиенте("Отправлен");
КонецПроцедуры 	
		
&НаКлиенте
Процедура ИзменитьСтатусОтправленияВозврат()
	ИзменитьСтатусОтправленияНаКлиенте("Возврат");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияГотовКВыдаче()
	ИзменитьСтатусОтправленияНаКлиенте("Готов к выдаче");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияЗабратьВозврат()
	ИзменитьСтатусОтправленияНаКлиенте("Забрать возврат");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияНаСборке()
	ИзменитьСтатусОтправленияНаКлиенте("На сборке");
КонецПроцедуры 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияОжидаетОплаты()
	ИзменитьСтатусОтправленияНаКлиенте("Ожидает оплаты");
КонецПроцедуры 	    

&НаКлиенте
Процедура ИзменитьСтатусОтправленияОтмененПокупателем()
	ИзменитьСтатусОтправленияНаКлиенте("Отменен покупателем");
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьСтатусОтправленияВЗакупке()
	ИзменитьСтатусОтправленияНаКлиенте("В закупке");
КонецПроцедуры 	 	

&НаКлиенте
Процедура ИзменитьСтатусОтправленияНаКлиенте(СтатусОтправления) 
	
    Если Не ЗначениеЗаполнено(Объект.ДатаДоставки) 
		ИЛИ Не ЗначениеЗаполнено(Объект.СтатусОтправления) 
		ИЛИ Не ЗначениеЗаполнено(Объект.Маркетплейс) Тогда
        ПоказатьПредупреждение(,"Заполните обязательные поля на закладке отборы: 'Дата доставки', 'Статус отправления', 'Маркетплейс'!");	
	Иначе	   		                  
		ИзменитьСтатусОтправленияНаСервере(СтатусОтправления);
		СписокОтправленийНаСервере("FBS");		
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура ИзменитьСтатусОтправленияНаСервере(СтатусОтправления)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СтатусОтправления = СтатусОтправления;
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");    
КонецПроцедуры 

&НаКлиенте
Процедура ИспользоватьРасширеннуюНастройкуЗаказовПриИзменении(Элемент)
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура СтатусОтправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	П = Новый Структура;  	
	П.Вставить("ЗакрыватьПриВыборе", Истина);
	П.Вставить("Вариант", "СтатусОтправления");

	ВыбФорма = ОткрытьФорму("ВнешняяОбработка.ОбменSelSup_УТ.Форма.ФормаВыбора",П,ЭтотОбъект);

КонецПроцедуры 

&НаКлиенте
Процедура МаркетплейсНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	П = Новый Структура;  	
	П.Вставить("ЗакрыватьПриВыборе", Истина);
	П.Вставить("Вариант", "Маркетплейс");

	ВыбФорма = ОткрытьФорму("ВнешняяОбработка.ОбменSelSup_УТ.Форма.ФормаВыбора",П,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииЗКНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	П = Новый Структура;  	
	П.Вставить("ЗакрыватьПриВыборе", Истина);
	П.Вставить("Вариант", "ВидОперацииЗК");

	ВыбФорма = ОткрытьФорму("ВнешняяОбработка.ОбменSelSup_УТ.Форма.ФормаВыбора",П,ЭтотОбъект);

КонецПроцедуры
#КонецОбласти


#Область КомандыТовары

&НаСервере
Процедура СоздатьНоменклатуруНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Для каждого СтрокаТабличнойЧасти Из ОбработкаОбъект.Заказы Цикл
		ОбработкаОбъект.СоздатьНоменклатуру(СтрокаТабличнойЧасти);  				
	КонецЦикла;  
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда) 
	СоздатьНоменклатуруНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьТоварыНаСервере(Вариант)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбработатьТовары(Вариант);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТоваровSelSup(Команда)
	Если Не ЗначениеЗаполнено(Объект.ВыбСклад) Тогда
		ПоказатьПредупреждение(,"Заполните обязательные поля на закладке товары: 'Склад'!");	
	Иначе	   		
		ОбработатьТоварыНаСервере(2); 	
	КонецЕсли;	
КонецПроцедуры 

&НаСервере
Процедура СписокОрганизацийSelSupНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбработатьОрганизации();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийSelSup(Команда) 
	СписокОрганизацийSelSupНаСервере();
КонецПроцедуры

&НаСервере
Процедура СписокСкладовSelSupНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбработатьСклады();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура СписокСкладовSelSup(Команда) 
	СписокСкладовSelSupНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиНаСайтеНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.УстановитьОстаткиТоваров();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");  
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстаткиНаСайте(Команда)
	ОбновитьОстаткиНаСайтеНаСервере();
КонецПроцедуры  

&НаСервере
Процедура СвязатьСкладыНаСайтеНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СвязатьСклады();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");  
	
КонецПроцедуры  

&НаСервере
Процедура ПроверитьОрганизацииНаСервере(Отказ)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура();
	Отбор.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Строки = ОбработкаОбъект.Организации.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0
		ИЛИ ОбработкаОбъект.Организации.Количество() = 0 Тогда  
		Отказ = Истина;
	КонецЕсли;	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");  
	
КонецПроцедуры

&НаКлиенте
Процедура СвязатьСкладыНаСайте(Команда) 
	
	Отказ = Ложь;
	ПроверитьОрганизацииНаСервере(Отказ);
	Если Отказ Тогда
		ПоказатьПредупреждение(,"Заполните все соответствия организаций на закладке настроек справочников!");
	Иначе	   		
		СвязатьСкладыНаСайтеНаСервере();		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область КомандыДокументы

&НаСервере
Процедура СписокОтправленийНаСервере(ВидПродажи)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьОтправления(ВидПродажи);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура СписокОтправленийFBS(Команда)
	//Если Не ЗначениеЗаполнено(Объект.ДатаНачала)
	//	ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
	//    ПоказатьПредупреждение(,"Заполните обязательные поля на закладке отборы: 'Период с', 'Период по'!"); 
	Если Не ЗначениеЗаполнено(Объект.ДатаДоставки) 
		ИЛИ Не ЗначениеЗаполнено(Объект.СтатусОтправления) 
		ИЛИ Не ЗначениеЗаполнено(Объект.Маркетплейс) Тогда
        ПоказатьПредупреждение(,"Заполните обязательные поля на закладке отборы: 'Дата доставки', 'Статус отправления', 'Маркетплейс'!");	
	Иначе	   		
		СписокОтправленийНаСервере("FBS");		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРеализацииНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьРеализации();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаказыПокупателейНаСервере() 
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьЗаказыПокупателей();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказыПокупателей(Команда)   
	СоздатьЗаказыПокупателейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьРеализации(Команда)
	СформироватьРеализацииНаСервере();
КонецПроцедуры 

&НаСервере
Процедура ПечатьЭтикетокЗаказовНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПечатьЗаказов();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетокЗаказов(Команда)
	ПечатьЭтикетокЗаказовНаСервере();
КонецПроцедуры  

&НаСервере
Процедура ОбновитьЭтикеткиЗаказовНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбновитьЭтикеткиЗаказов();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭтикеткиЗаказов(Команда)
	ОбновитьЭтикеткиЗаказовНаСервере();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьНаименованиеНаРусском(ВыбЗначение) 	
	ЗначениеРу = "";
	Если ВыбЗначение = "ALL" Тогда
		ЗначениеРу = "все товары";
	ИначеЕсли  ВыбЗначение = "VISIBLE" Тогда
		ЗначениеРу = "товары, которые видны покупателям";
	ИначеЕсли  ВыбЗначение = "INVISIBLE" Тогда
		ЗначениеРу = "товары, которые по какой-то из причин не видны покупателям";
	ИначеЕсли  ВыбЗначение = "EMPTY_STOCK" Тогда
		ЗначениеРу = "товары, у которых не указано наличие"; 		
	ИначеЕсли  ВыбЗначение = "READY_TO_SUPPLY" Тогда
		ЗначениеРу = "товары, которым можно установить наличие";
	ИначеЕсли  ВыбЗначение = "STATE_FAILED" Тогда
		ЗначениеРу = "товары, создание которых завершилось ошибкой"; 		
	КонецЕсли;
	Возврат ЗначениеРу;
КонецФункции

&НаКлиенте
Процедура ВыбратьВсеФлажки()	
	Для Каждого СтрокаТаблицы Из Объект.Заказы Цикл
		СтрокаТаблицы.Обработать = Истина;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсеФлажки()	
	Для Каждого СтрокаТаблицы Из Объект.Заказы Цикл
		СтрокаТаблицы.Обработать = Ложь;		
	КонецЦикла;    	
КонецПроцедуры  

&НаКлиенте
Процедура СкладыВыбратьВсеФлажки()	
	Для Каждого СтрокаТаблицы Из Объект.Склады Цикл
		СтрокаТаблицы.СвязатьСклады = Истина;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СкладыИсключитьВсеФлажки()	
	Для Каждого СтрокаТаблицы Из Объект.Склады Цикл
		СтрокаТаблицы.СвязатьСклады = Ложь;		
	КонецЦикла;    	
КонецПроцедуры 

&НаСервере
Процедура ТестSelSupНаСервере() 
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	РезультатТеста = ОбработкаОбъект.ВыполнитьТестSelSup();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Если РезультатТеста <> Неопределено Тогда
		Сообщить ("Тестирование прошло успешно!");
	Иначе
		Сообщить ("Не удалось получить тестовые данные!");
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ТестSelSup(Команда) 
	
	ТестSelSupНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура НажатьНаСсылкуСтраницыСApiKey(Команда)
	ПерейтиПоНавигационнойСсылке("https://selsup.ru/application/integration/1c/module");
КонецПроцедуры  

&НаСервере
Процедура УстановитьОформлениеНаСервере()
	
	Если Объект.ИмяМетаданных =  "УправлениеНебольшойФирмой"  Тогда
		 	
		Элементы.СтраницаЗаполнениеУНФ.Видимость = Истина;   
		
		Элементы.ЗаказыЗаказПокупателя.Видимость = Истина;
		Элементы.ЗаказыЗаказКлиента.Видимость = Ложь;
		
	Иначе
		
		Элементы.СтраницаЗаполнениеУНФ.Видимость = Ложь;
		
		Элементы.ЗаказыЗаказПокупателя.Видимость = Истина;
		Элементы.ЗаказыЗаказКлиента.Видимость = Ложь;
				
	КонецЕсли; 
	
	
	Элементы.Организация.Видимость                       = Не Объект.ИспользоватьРасширеннуюНастройкуЗаказов;  
	Элементы.ВыбКонтрагент.Видимость                     = Не Объект.ИспользоватьРасширеннуюНастройкуЗаказов;
    Элементы.ВыбСоглашение.Видимость                     = Не Объект.ИспользоватьРасширеннуюНастройкуЗаказов;
	Элементы.РасширеннаяНастройкаЗаказов.Видимость       = Объект.ИспользоватьРасширеннуюНастройкуЗаказов;
	
КонецПроцедуры

&НаКлиенте  
Процедура УстановитьОформление()	
	УстановитьОформлениеНаСервере(); 		
КонецПроцедуры

// Проверка, что выбран верный тп значения 
&НаСервере
Функция ПроверкаТиповРеквизитов()
	
	ЕстьОшибки = Ложь;
	Если Объект.ИмяМетаданных = "УправлениеНебольшойФирмой"  Тогда
		
		Если  ТипЗнч(Объект.ВыбДоговор) <> Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Сообщить ("Реквизиту ВыбДоговор необходимо установить тип значения СправочникСсылка.ДоговорыКонтрагентов");
			ЕстьОшибки = Истина;
		КонецЕсли;	
		
		Если ТипЗнч(Объект.ВыбЕдиницаИзмеренияУНФ) <> Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			Сообщить ("Реквизиту ВыбЕдиницаИзмеренияУНФ необходимо установить тип значения СправочникСсылка.КлассификаторЕдиницИзмерения");
			ЕстьОшибки = Истина;  
		КонецЕсли;
		
		ЗнОбъект = РеквизитФормыВЗначение("Объект");
		Реквизиты = ЗнОбъект.метаданные().ТабличныеЧасти.Заказы.Реквизиты;
		Для Каждого ТекСтрока ИЗ Реквизиты  Цикл
			Если ТекСтрока.Имя = "ЗаказПокупателя"
				И Строка(ТекСтрока.Тип) = "Строка" Тогда  			
				Сообщить ("Реквизиту ЗаказПокупателя в ТЧ Заказы необходимо установить тип значения ДокументСсылка.ЗаказПокупателя");
				ЕстьОшибки = Истина;
			КонецЕсли; 			
		КонецЦикла;
				
	ИначеЕсли  Объект.ИмяМетаданных = "УправлениеТорговлей"  Тогда
		
		Если  ТипЗнч(Объект.ВыбСоглашение) <> Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
			Сообщить ("Реквизиту ВыбСоглашение необходимо установить тип значения СправочникСсылка.СоглашенияСКлиентами");
			ЕстьОшибки = Истина;
		КонецЕсли;	
		Если  ТипЗнч(Объект.ВыбУпаковка) <> Тип("СправочникСсылка.УпаковкиЕдиницыИзмерения") Тогда
			Сообщить ("Реквизиту ВыбУпаковка необходимо установить тип значения СправочникСсылка.УпаковкиЕдиницыИзмерения");
			ЕстьОшибки = Истина;
		КонецЕсли;	
		Если  ТипЗнч(Объект.ВыбСкладРеал) <> Тип("СправочникСсылка.Склады") Тогда
			Сообщить ("Реквизиту ВыбСкладРеал необходимо установить тип значения СправочникСсылка.Склады");
			ЕстьОшибки = Истина;
		КонецЕсли;
	
		ЗнОбъект = РеквизитФормыВЗначение("Объект");
		Реквизиты = ЗнОбъект.метаданные().ТабличныеЧасти.Заказы.Реквизиты;
		Для Каждого ТекСтрока ИЗ Реквизиты  Цикл
			Если ТекСтрока.Имя = "ЗаказКлиента"
				И Строка(ТекСтрока.Тип) <> "Заказ клиента" Тогда  			
				Сообщить ("Реквизиту ЗаказКлиента в ТЧ Заказы необходимо установить тип значения ДокументСсылка.ЗаказКлиента");
				ЕстьОшибки = Истина;
			КонецЕсли;  
		
		КонецЦикла;

	Иначе
		Сообщить ("Конфигурация не поддерживается!");
	КонецЕсли;
	Возврат ЕстьОшибки;
КонецФункции
#КонецОбласти

#Область СопоставлениеТоваров

&НаКлиенте
Процедура TextQueryПриИзменении(Элемент)
	ОбновитьПродуктыSelSupНаСервере();
КонецПроцедуры 

&НаСервере
Процедура ОбновитьПродуктыSelSupНаСервере() 
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.ТоварыSelSup.Очистить(); 
	ОбработкаОбъект.Товары1C.Очистить();
	
	ТаблицаНоменклатурыSelSup = ОбработкаОбъект.НайтиПродуктыSelSup(ОбработкаОбъект.ApiKey, ОбработкаОбъект.TextQuery); 
	Если Не ТаблицаНоменклатурыSelSup = Неопределено Тогда
		
		Для каждого СтрокаТабличнойЧасти Из ТаблицаНоменклатурыSelSup Цикл
			НоваяСтрока = ОбработкаОбъект.ТоварыSelSup.Добавить();  
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти); 
		КонецЦикла;	
		
		ТаблицаНоменклатуры1C = ОбработкаОбъект.ОбработатьТаблицуНоменклатурыSelSup(ТаблицаНоменклатурыSelSup); 		
		Если Не ТаблицаНоменклатуры1C = Неопределено Тогда 
			Для каждого СтрокаТабличнойЧасти Из ТаблицаНоменклатуры1C Цикл
				НоваяСтрока = ОбработкаОбъект.Товары1C.Добавить();  
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти); 				
			КонецЦикла;  
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура СопоставитьНоменклатурыНаСервере(SkuId, OrganizationId, oneCId)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");  
	
	КодОтвета = ОбработкаОбъект.ОбновитьМодельПродуктаSelSup(ОбработкаОбъект.ApiKey, SkuId, OrganizationId, oneCId); 
	ТекстСообщения = ОбработкаОбъект.ПолучитьТекстКодаОтвета(КодОтвета); 
	
	Сообщить(ТекстСообщения);  
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьОперациюСопоставленияТоваров(РезультатВопроса, ПараметрыЗаписи) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ТекущиеДанныеТоварыSelSup = Элементы.ТоварыSelSup.ТекущиеДанные;  
		ТекущиеДанныеТовары1C = Элементы.Товары1C.ТекущиеДанные;
		Если Не ТекущиеДанныеТоварыSelSup = Неопределено 
			И Не ТекущиеДанныеТовары1C = Неопределено Тогда
			СопоставитьНоменклатурыНаСервере(ТекущиеДанныеТоварыSelSup.skuId, ТекущиеДанныеТоварыSelSup.organizationid, ТекущиеДанныеТовары1C.oneCId);
		КонецЕсли; 
	КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьНоменклатуры(Команда) 
		
	Оповещение = Новый ОписаниеОповещения("ПродолжитьОперациюСопоставленияТоваров", ЭтотОбъект);
	Сообщение = НСтр("ru='Выбранная привязка товаров будет отражена на сайте SelSup.ru.
	|Вы уверенны что хотите продолжить операцию?'");
	ПоказатьВопрос(Оповещение, Сообщение, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры   

&НаСервере
Функция ОбновитьАдресКартинки()   
	
	Если Объект.ФайлКартинки.Пустая() Тогда
		АдресКартинки = "";
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		Попытка
			АдресКартинки = РаботаСФайлами.ДанныеФайла(Объект.ФайлКартинки, УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла;
		Исключение
			АдресКартинки = "";
		КонецПопытки;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СписокТоваровSelSupПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.ТоварыSelSup.ТекущиеДанные;   
	
	Если ТекущиеДанные = Неопределено Тогда
		// ТЧ ТоварыSelSup пустая
		Элементы.Товары1C.ОтборСтрок = Неопределено;
		Элементы.ФормаСопоставитьНоменклатуру.Доступность = Ложь;
	Иначе
		// Для ТЧ Товары1C устанавливаем отбор по текущему skuId
		ТекущийSKU = ТекущиеДанные.skuId;  
		ТекущийCId = ТекущиеДанные.oneCId; 
		Элементы.ФормаСопоставитьНоменклатуру.Доступность = Не ЗначениеЗаполнено(ТекущийCId); 
		Элементы.Товары1C.ОтборСтрок = Новый ФиксированнаяСтруктура("skuId", ТекущийSKU); 	
    КонецЕсли;  
		
КонецПроцедуры
#КонецОбласти

